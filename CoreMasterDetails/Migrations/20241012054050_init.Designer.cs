// <auto-generated />
using System;
using CoreMasterDetails.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreMasterDetails.Migrations
{
    [DbContext(typeof(ArtistDbContext))]
    [Migration("20241012054050_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreMasterDetails.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Dob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId")
                        .HasName("PK__Artists__25706B50F4F7FB5A");

                    b.HasIndex("RoleId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("CoreMasterDetails.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MovieId")
                        .HasName("PK__Movies__4BD2941A1F9512FD");

                    b.HasIndex("ArtistId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CoreMasterDetails.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A24443AE1");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CoreMasterDetails.Models.Artist", b =>
                {
                    b.HasOne("CoreMasterDetails.Models.Role", "Role")
                        .WithMany("Artists")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Artist_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreMasterDetails.Models.Movie", b =>
                {
                    b.HasOne("CoreMasterDetails.Models.Artist", "Artist")
                        .WithMany("Movies")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK_Movie_Artist");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("CoreMasterDetails.Models.Artist", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("CoreMasterDetails.Models.Role", b =>
                {
                    b.Navigation("Artists");
                });
#pragma warning restore 612, 618
        }
    }
}
